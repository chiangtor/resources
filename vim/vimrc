"--------------------------------------------------
" Character encoding
" # set termencoding=utf-8        
set encoding=utf-8            
set fileencodings^=utf-8      

" set termencoding=iso-8859-2    
" set encoding=iso-8859-2      
" set fileencodings^=iso-8859-2

"--------------------------------------------------
" Base settings

set nocompatible          " We're running Vim, not Vi!

" start vundle https://github.com/gmarik/Vundle.vim 
filetype off
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle, required
Bundle 'tau/vundle'

" The following are examples of different formats supported.
" Keep bundle commands between here and filetype plugin indent on.
" scripts on GitHub repos
Bundle "lepture/vim-jinja"

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" ++++
" scripts from http://vim-scripts.org/vim/scripts.html
" ++++
" scripts not on GitHub
" ++++
" git repos on your local machine (i.e. when working on your own plugin)

" ++++

" end vundle

syntax on                 " syntax highlingt
set autoindent            " automatical code indent
set cindent
set smartindent
set backspace=2           " backspace del all
set history=50            " history of commands
set hlsearch              " highlignt search fraze
filetype plugin on        " file type based syntax highliht
filetype indent on
set ts=4                  " tab stop
set sw=4                  " shift width (with autoindent)
set textwidth=2048        " text witdth
set nu                    " show numbers
set lcs=tab:>.,eol:$      " show non printed chars
set whichwrap+=<,>,[,]    " where wrap long lines
set gdefault              " /g default on s///
set showcmd               " show typed commands
set wildmenu              " show menu bash-like on tab
set wildignore=*.o,*~     " ignor on wildmenu
set incsearch             " show what is typed on /
set statusline=%<%f\ (%{&encoding})\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set laststatus=2          " always show status line
set viminfo='1000,f1,:1000,/1000  " big viminfo :)
set history=500
set lazyredraw
set wmh=0
set t_Co=256              " color numbers
set wrap                " do not wrap lines value of not wrap: nowrap
set nocp  " http://www.vim.org/scripts/script.php?script_id=294


" set clipboard=unnamedplus " since version 7.3 the console version of Vim supports Mac OS X clipboard.
" set cb=unnamed
vmap "+y :w !pbcopy

vmap "+p :r !pbpaste


"-------------------------------------------------
" ESC-c ... capitalize current word (and goto next word)
" ESC-l ... lowercase current word and goto next word
" ESC-u ... uppercase current word and goto next word
map <esc>c viwuW
map <esc>l viwuW
map <esc>u viwUW

"--------------------------------------------------
" Word completion on <TAB>
"
function! InsertTabWrapper(direction)
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  elseif "backward" == a:direction
    return "\<c-p>"
  else
    return "\<c-n>"
  endif
endfunction
inoremap <Tab> <C-R>=InsertTabWrapper("backward")<CR>
inoremap <S-Tab> <C-R>=InsertTabWrapper("forward")<CR>

"--------------------------------------------------
" Duplicate line
map! <c-d> <esc>yypi
map <c-d> <esc>yyp

"--------------------------------------------------
" File tree on F7
map <silent> <F7> :NERDTreeToggle<CR>
let NERDTreeMapActivateNode='<CR>'

"--------------------------------------------------
" Change encoding
" map _u :set encoding=utf-8<cr>:set fileencodings^=utf-8<cr>:set termencoding=utf-8<cr>
" map _i :set encoding=iso-8859-2<cr>:set fileencodings^=iso-8859-2<cr>:set termencoding=iso-8859-2<cr>

"--------------------------------------------------
" Non indend paste: <F11><S-Ins><F11>
set pastetoggle=<F11>

"--------------------------------------------------
" Open in last edit place
au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g'\"" | endif

"--------------------------------------------------
" Syntax coloring (~/.vim/colors/)
" available colors: `ls /usr/share/vim/vim??/colors`
" colorscheme wombat256mod 

"---------------------------------------------------
" Tags file (use ctags)
let Tlist_Use_Right_Window = 1    " tags list on right window
:set tags=.vimtags
map <silent> <F8> :Tlist<CR>

"---------------------------------------------------
" set guifont? render the current font configuration
"if has('gui_running')
"    set guifont=Lucida_Console:h11
"  endif

"---------------------------------------------------
" Tab size
:set tabstop=4        " Force tabs to be displayed/expanded to 2 spaces (instead of default 8).
:set softtabstop=4    " Make Vim treat <Tab> key as 2 spaces, but respect hard Tabs.
                      " I don't think this one will do what you want.
:set expandtab        " Turn Tab keypresses into spaces.  Sounds like this is happening to you.
                      " You can still insert real Tabs as [Ctrl]-V [Tab].
:set shiftwidth=4     " When auto-indenting, indent by this much.
                      " (Use spaces/tabs per "expandtab".)
:retab                " Change all the existing tab characters to match the current tab settings
"---jsbeautify
"let g:jsbeautify = {'indent_size': 4, 'indent_char': '\t'}
"let g:htmlbeautify = {'indent_size': 4, 'indent_char': ' ', 'max_char': 78, 'brace_style': 'expand', 'unformatted': ['a', 'sub', 'sup', 'b', 'i', 'u']}
"let g:cssbeautify = {'indent_size': 4, 'indent_char': ' '}
"----------------------------------------------------------------
"--- sqlutil_600  
"let g:sqlutil_load_default_maps = 0 
vmap <silent>sf        <Plug>SQLU_Formatter<CR> 
nmap <silent>scl       <Plug>SQLU_CreateColumnList<CR> 
nmap <silent>scd       <Plug>SQLU_GetColumnDef<CR> 
nmap <silent>scdt      <Plug>SQLU_GetColumnDataType<CR> 
nmap <silent>scp       <Plug>SQLU_CreateProcedure<CR> "

" -- Omni completion isn't automatically turned on for Vim 7, and it's super useful if you code in CSS or HTML.
"

" Set snipMate author
let g:snips_author = 'Jarod Chiang<chiangtor#gmaildotcom>'

" https://github.com/lepture/vim-jinja
au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm set ft=jinja

" vmap '' :w !pbcopy0i

" colorscheme
colorscheme symfony

" javascript http://jser.me/2012/08/02/%E7%94%A8vim%E5%86%99javascript.html
let b:javascript_fold=1  "开启折叠
let javascript_enable_domhtmlcss=1  "启用对dom html css高亮支持

